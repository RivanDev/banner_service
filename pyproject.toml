[tool.poetry]
name = "banner-service"
version = "0.1.0"
description = ""
authors = ["Rivan <rivan_git@mail.ru>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.110.1"
sqlalchemy = "^2.0.29"
asyncpg = "^0.29.0"
alembic = "^1.13.1"


[tool.poetry.group.dev.dependencies]
black = "^24.3.0"
pre-commit = "^3.7.0"
ruff = "^0.3.5"
mypy = "^1.9.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 119
target-version = ['py312']
include = '\.pyi?$'

[tool.ruff]
target-version = 'py311'
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "migrations",
]

# Same as Black.
line-length = 119
indent-width = 4

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = [
    "E",
    "W",
    "F",
    "I",
    "D",
    "A",
    "C4",
    "COM",
    "DTZ",
    "T10",
    "EM",
    "ISC",
    "ICN",
    "G",
    "T20",
    "PT",
    "SIM",
    "TID",
    "ARG",
    "PTH",
    "PL",
    "PLE",
    "PLR",
    "PLW",
    "RUF",
    "ASYNC",
]

ignore = [
    "D401",
    "D403",
    "D400",
    "D415",
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in public function
    "D104",  # Missing docstring in public package
    "D105",  # Missing docstring in magic method
    "D106",  # Missing docstring in public nested class
    "D107",  # Missing docstring in `__init__`
    "D200",  # One-line docstring should fit on one line
    "D203",  # 1 blank line required before class docstring
    "D210",  # No whitespaces allowed surrounding docstring text
    "D205",  # 1 blank line required between summary line and description
    "D212",  # Multi-line docstring summary should start at the first line
    "D301",  # Use r""" if any backslashes in a docstring
    "D404",  #  First word of the docstring should not be "This"
    "PLR0913",  # Too many arguments to function call
    "A003",  # Class attribute `type` is shadowing a Python builtin
    "ARG001",  # Unused function argument: `{name}`
    "ARG002",  # Unused method argument: `{name}`
    "ARG003",  # Unused class method argument: `{name}`
    "RUF001",  # String contains ambiguous unicode character {confusable} (did you mean {representant}?)
    "RUF002",  # Docstring contains ambiguous unicode character {confusable} (did you mean {representant}?)
    "RUF003",  # Comment contains ambiguous unicode character {confusable} (did you mean {representant}?)
    "PT006",  # pytest parametrize tuple args
    "COM812", # Trailing comma missing
    "ISC001", # single-line-implicit-string-concatenation
    "DTZ005", # The use of `datetime.datetime.now()` without `tz` argument is not allowed
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.mypy]
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
exclude = ["alembic", "__pycache__"]